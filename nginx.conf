
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    include nginx.conf.d/*.conf;
    default_type  application/octet-stream;

    charset utf-8;
    # EA-2236: Disable access logs
    access_log off;
    sendfile on;
#     map_hash_max_size 64;
    map_hash_bucket_size 128;

    map $http_accept $format {
      "~*(text/html|application/xhtml\+xml)"                      "html";
      "~*(application/rdf\+xml|rdf/xml|application/xml|text/xml)" "rdf";
      "~*(application/json)"                                      "json";
      "~*(application/ld\+json)"                                  "jsonld";
      "~*(text/turtle|application/turtle|application/x-turtle)"   "ttl";
      "~*(text/n3|text/rdf\+n3|application/n3)"                   "n3";
      "~*(application/n-triples|application/ntriples|text/nt)"    "nt";
    }

    # makes configuring record-api a lot easier
    map $http_accept $include_apikey {
        "~*(text/html|application/xhtml\+xml)"   0;
        default                                  1;
    }

    tcp_nodelay on;
    tcp_nopush on;
    keepalive_timeout 30;
    port_in_redirect off; # Ensure that redirects don't include the internal container PORT - 8080

    #gzip  on;

    server {
        listen       8088;
        server_name  localhost;

#       error_log    /usr/local/etc/nginx/debug.log debug;

        # Used by Kubernetes health checks
        location /nginx-health {
            default_type application/json;
            return 200 '{"status":"healthy"}';
        }

        #resolver ${RESOLVER_SETTINGS};

        add_header Link "<http://creativecommons.org/publicdomain/zero/1.0/>;rel=license";


        # CORS
        add_header "Access-Control-Allow-Origin" "*";
        add_header "Access-Control-Allow-Credentials" "true";
        add_header "Access-Control-Allow-Methods" "POST, GET, OPTIONS, DELETE, PUT, PATCH, HEAD";
        add_header "Access-Control-Max-Age" "600";
        add_header "Access-Control-Expose-Headers" "Location";
        add_header "Access-Control-Allow-Headers" "x-requested-with, Content-Type, origin, authorization, accept, client-security-token";

        # Add a rewrite to respond with a 200 SUCCESS on every OPTIONS request.
        if ($request_method = 'OPTIONS') {
          return 200;
        }

        ########################################
        # Negotiation for Record API           #
        ########################################

        rewrite /(aggregation/provider|proxy/provider|aggregation/europeana|proxy/europeana)/(.*) $scheme://$host:$server_port/item/$2 redirect;

       location /item/ {
         # no Apikey
         if ($include_apikey = 0){
           rewrite /item/(.*) https://www.europeana.eu/item/$1 redirect;
         }
         # yes Apikey
         if ($include_apikey = 1){
           rewrite /item/(.*) https://api.europeana.eu/record/$1?wskey=api2demo redirect;
         }
       }

        ########################################
        # Negotiation for OpenSKOS             #
        ########################################

        location ~ /concept/(loc|soundgenres) {
          return 301 https://$host$request_uri.xml;
        }

        ########################################
        # Annotations                          #
        ########################################
        rewrite ^/annotation/(.+?)/(.+?)/(.+?)$ https://iiif.europeana.eu/presentation/$1/$2/anno/$3 redirect;
        rewrite ^/annotation/(.*) https://api.europeana.eu/annotation/$1 redirect;

        ########################################
        # Entities                             #
        ########################################

        location ~ /(agent|place|concept|timespan|organization)/base/ {
            rewrite /(agent|place|concept|timespan|organization)/base/(.*) $scheme://$host:$server_port/$1/$2 permanent;
        }

        location ~ /(agent|place|concept|timespan|organization)/ {
          # no Apikey
          if ($include_apikey = 0){
            rewrite /agent/(.*) https://www.europeana.eu/collections/person/$1 redirect;
            rewrite /concept/(.*) https://www.europeana.eu/collections/topic/$1 redirect;
            rewrite /timespan/(.*) https://www.europeana.eu/collections/time/$1 redirect;
            rewrite /organization/(.*) https://www.europeana.eu/collections/organization/$1 redirect;
          }

          # with Apikey
          if ($include_apikey = 1){
            rewrite /(agent|place|concept|timespan|organization)/(.*) https://api.europeana.eu/entity/$1/$2?wskey=apidemo redirect;
          }
        }

        ########################################
        # Sets                                 #
        ########################################
        location /set/ {
          # Pas des clés d'Api
          if ($include_apikey = 0){
            rewrite /set/(.*) https://www.europeana.eu/set/$1 redirect;
          }

          # Clé d'Api
          if ($include_apikey = 1){
            rewrite /set/(.*) https://api.europeana.eu/set/$1?wskey=apidemo redirect;
            rewrite /set/(.*) https://api.europeana.eu/set/$1?wskey=apidemo redirect;
          }
        }

        ########################################
        # Fulltext                             #
        ########################################
        location ~ ^/(fulltext|presentation)/ {
          rewrite ^/fulltext/(.+?)/(.+?)/(.+?)$ https://api.europeana.eu/fulltext/$1/$2/$3 redirect;
        }

        ########################################
        # Negotiation for VoID and SPARQL      #
        ########################################

        # if the void is well-known
        location /.well-known/void/ {
          return 302 https://data-host.eu;
        }

        location /sparql/ {
          return 301 http://sparql.europeana.eu;
        }

        # remaining default cases
        location / {
            # try this if the Toitle is still void
            if ($format = "ttl"){
              return 303 https://europeana.ontotext.com/void.ttl;
            }

            # otherwise, try forwarding them to pro unless it's a file
            try_files $uri https://pro.europeana.eu/page/linked-open-data$is_args$args;
        }

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

    }

}
