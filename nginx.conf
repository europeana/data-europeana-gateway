
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    include nginx.conf.d/*.conf;
    charset utf-8;
    # EA-2236: Disable access logs
    access_log off;
    default_type application/octet-stream;
    include mime.types;
    sendfile on;
#     map_hash_max_size 64;
    map_hash_bucket_size 128;

    map $http_accept $format {
      "text/html|application/xhtml\+xml"                      "html";
      "application/rdf\+xml|rdf/xml|application/xml|text/xml" "rdf";
      "application/json"                                      "json";
      "application/ld\+json"                                  "jsonld";
      "text/turtle|application/turtle|application/x-turtle"   "ttl";
      "text/n3|text/rdf\+n3|application/n3"                   "n3";
      "application/n-triples|application/ntriples|text/nt"    "nt";
    }

    # makes configuring record-api a lot easier
    map $http_accept $include_apikey {
      "text/html|application/xhtml\+xml"  0;
      default                             1;
    }

    tcp_nodelay on;
    tcp_nopush on;
    keepalive_timeout 30;
    port_in_redirect off; # Ensure that redirects don't include the internal container PORT - 8080

    #gzip  on;

    server {
        listen       8088;
        server_name  localhost;
        
        # CORS
        add_header "Access-Control-Allow-Origin" "*";
        add_header "Access-Control-Allow-Credentials" "true";
        add_header "Access-Control-Allow-Methods" "POST, GET, OPTIONS, DELETE, PUT, PATCH, HEAD";
        add_header "Access-Control-Max-Age" "600";
        add_header "Access-Control-Expose-Headers" "Location";
        add_header "Access-Control-Allow-Headers" "x-requested-with, Content-Type, origin, authorization, accept, client-security-token";

        # Add a rewrite to respond with a 200 SUCCESS on every OPTIONS request.
        if ($request_method = 'OPTIONS') {
          return 200;
        }
        
        ########################################
        # Annotations                          #
        ########################################
        location ~ ^/annotation/ {
          rewrite ^/annotation/(.+?)/(.+?)/(.+?)$ {{env "PRESENTATION_API_HOST"}}/$1/$2/anno/$3 redirect;
          rewrite ^/annotation/(.*) {{env "ANNOTATION_API_HOST"}}/$1 redirect;
        }

        #charset koi8-r;
        #access_log  logs/host.access.log  main;

       # Local Swagger console with static OpenApi documents
        location /console/search {
            return 307 http://$host:$server_port/console/index.html?url=http://$host:$server_port/console/docs/v2/search.json;
        }

        location /console/record {
            return 307 http://$host:$server_port/console/index.html?url=http://$host:$server_port/console/docs/v2/record.json;
        }

   

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

    }



}
