# Config based on api-gateway's nginx.conf
# Based on: https://raw.githubusercontent.com/cloudfoundry/nginx-buildpack/v1.0.1/fixtures/mainline/nginx.conf
worker_processes auto;

# see https://github.com/cloudfoundry/nginx-buildpack/blob/master/fixtures/mainline/nginx.conf#L2
daemon off;

error_log stderr warn;

events {
    use epoll;
    worker_connections 1024;
    multi_accept on;
}

http {
    charset utf-8;
    # EA-2236: Disable access logs
    access_log off;
    default_type application/octet-stream;
    include mime.types;
    sendfile on;

    tcp_nodelay on;
    tcp_nopush on;
    keepalive_timeout 30;
    port_in_redirect off; # Ensure that redirects don't include the internal container PORT - 8080

    # Setting server env variable - e.g. "upstream search_api {" -  left out for now

    server {
        listen {{port}};
        root public;
        index index.html;

        # Enforce SSL
        if ($http_x_forwarded_proto != "https") {
            return 301 https://$host$request_uri;
        }


    } # server
} # http


# Apache version below
<VirtualHost *:*>
    ServerName ${DATA_HOST}

    DocumentRoot "/usr/local/apache2/htdocs/data.europeana.eu"

    RewriteEngine on

    #
    # Use SetEnvIf, not SetEnv, because the latter occurs *after* RewriteRules
    #


    if ($uri ~ "/."){
		set $URL_ANNOTATION_API https://api.europeana.eu/annotation;
	}

    SetEnvIf Request_URI . URL_ANNOTATION_API=https://api.europeana.eu/annotation
    SetEnvIf Request_URI . URL_ENTITY_API=https://api.europeana.eu/entity
    SetEnvIf Request_URI . URL_ENTITY_PORTAL=https://www.europeana.eu/collections
    SetEnvIf Request_URI . URL_FULLTEXT_API=https://api.europeana.eu/fulltext
    SetEnvIf Request_URI . URL_PRESENTATION_API=https://iiif.europeana.eu/presentation
    SetEnvIf Request_URI . URL_RECORD_API=https://api.europeana.eu/record
    SetEnvIf Request_URI . URL_RECORD_PORTAL=https://www.europeana.eu/item
    SetEnvIf Request_URI . URL_SET_API=https://api.europeana.eu/set
    SetEnvIf Request_URI . URL_SET_PORTAL=https://www.europeana.eu/set

    #NGINX
	if ($uri ~ "/."){
		set $URL_ENTITY_API https://api.europeana.eu/entity;
	}
	if ($uri ~ "/."){
		set $URL_ENTITY_PORTAL https://www.europeana.eu/collections;
	}
	if ($uri ~ "/."){
		set $URL_FULLTEXT_API https://api.europeana.eu/fulltext;
	}
	if ($uri ~ "/."){
		set $URL_PRESENTATION_API https://iiif.europeana.eu/presentation;
	}
	if ($uri ~ "/."){
		set $URL_RECORD_API https://api.europeana.eu/record;
	}
	if ($uri ~ "/."){
		set $URL_RECORD_PORTAL https://www.europeana.eu/item;
	}
	if ($uri ~ "/."){
		set $URL_SET_API https://api.europeana.eu/set;
	}
	if ($uri ~ "/."){
		set $URL_SET_PORTAL https://www.europeana.eu/set;
	}

    #
    # Detect if client prefers specific formats, if matched variable will be set to 1
    #
    SetEnvIf Accept text/html|application/xhtml\+xml                      format_html
    SetEnvIf Accept application/rdf\+xml|rdf/xml|application/xml|text/xml format_rdf
    SetEnvIf Accept application/json                                      format_json
    SetEnvIf Accept application/ld\+json                                  format_jsonld
    SetEnvIf Accept text/turtle|application/turtle|application/x-turtle   format_turtle
    SetEnvIf Accept text/n3|text/rdf\+n3|application/n3                   format_n3
    SetEnvIf Accept application/n-triples|application/ntriples|text/nt    format_ntriples

    #NGINX (this seems OK)
    if (Accept ~ "text/html|application/xhtml\+xml"){
		set $format_html 1;
	}
	if (Accept ~ "application/rdf\+xml|rdf/xml|application/xml|text/xml"){
		set $format_rdf 1;
	}
	if (Accept ~ "application/json"){
		set $format_json 1;
	}
	if (Accept ~ "application/ld\+json"){
		set $format_jsonld 1;
	}
	if (Accept ~ "text/turtle|application/turtle|application/x-turtle"){
		set $format_turtle 1;
	}
	if (Accept ~ "text/n3|text/rdf\+n3|application/n3"){
		set $format_n3 1;
	}
	if (Accept ~ "application/n-triples|application/ntriples|text/nt"){
		set $format_ntriples 1;
	}


    #
    # Cross-origin resource sharing
    #
    Header always set Access-Control-Allow-Origin "*"
    Header always set Access-Control-Allow-Credentials "true"
    Header always set Access-Control-Allow-Methods "POST, GET, OPTIONS, DELETE, PUT, PATCH, HEAD"
    Header always set Access-Control-Max-Age "600"
    Header always set Access-Control-Expose-Headers "Location"
    Header always set Access-Control-Allow-Headers "x-requested-with, Content-Type, origin, authorization, accept, client-security-token"

    # Add a rewrite to respond with a 200 SUCCESS on every OPTIONS request.
    RewriteCond %{REQUEST_METHOD} OPTIONS
    RewriteRule ^(.*)$ $1 [R=200,L]

    #NGINX
    if ($request_method ~ "OPTIONS"){
		set $rule_0 1;
	}
	if ($rule_0 = "1"){
		rewrite ^/(.*)$ /$1 redirect;
	}


    ########################################
    # Negotiation for Record API           #
    ########################################

    # To avoid duplicating the rules
    RewriteRule /(aggregation/provider|proxy/provider|aggregation/europeana|proxy/europeana)/(.*) /item/$2

    # HTML
    RewriteCond %{ENV:format_html} 1
    RewriteRule /item/(.*) \
                %{ENV:URL_RECORD_PORTAL}/$1 \
                [R=303,L]

    # RDF/XML
    RewriteCond %{ENV:format_rdf} 1
    RewriteRule /item/(.*) \
                %{ENV:URL_RECORD_API}/$1.rdf?wskey=%{ENV:API_KEY} \
                [R=303,L]

    # JSON
    RewriteCond %{ENV:format_json} 1
    RewriteRule /item/(.*) \
                %{ENV:URL_RECORD_API}/$1.json?wskey=%{ENV:API_KEY} \
                [R=303,L]

    # JSON-LD
    RewriteCond %{ENV:format_jsonld} 1
    RewriteRule /item/(.*) \
                %{ENV:URL_RECORD_API}/$1.jsonld?wskey=%{ENV:API_KEY} \
                [R=303,L]

    # Turtle (Intercept with Filter)
    RewriteCond %{ENV:format_turtle} 1
    RewriteRule /item/(.*) \
                %{ENV:URL_RECORD_API}/$1.ttl?wskey=%{ENV:API_KEY} \
                [R=303,L]

    # N3 (Intercept with Filter)
    RewriteCond %{ENV:format_n3} 1
    RewriteRule /item/(.*) \
                %{ENV:URL_RECORD_API}/$1.n3?wskey=%{ENV:API_KEY} \
                [R=303,L]

    # N-Triples (Intercept with Filter)
    RewriteCond %{ENV:format_ntriples} 1
    RewriteRule /item/(.*) \
                %{ENV:URL_RECORD_API}/$1.nt?wskey=%{ENV:API_KEY} \
                [R=303,L]

    #
    # Default
    #
    RewriteRule /item/(.*) \
                %{ENV:URL_RECORD_PORTAL}/$1 \
                [R=303,L]



    # NGINX
    rewrite /(aggregation/provider|proxy/provider|aggregation/europeana|proxy/europeana)/(.*) /item/$2 ;
	if ($format_html ~ "1"){
		set $rule_1 1;
	}
	if ($rule_1 = "1"){
		rewrite /item/(.*) /$url_record_portal$1 redirect;
	}
	if ($format_rdf ~ "1"){
		set $rule_2 1;
	}
	if ($rule_2 = "1"){
		rewrite /item/(.*) /$url_record_api$1.rdf?wskey=%{env:api_key} redirect;
	}
	if ($format_json ~ "1"){
		set $rule_3 1;
	}
	if ($rule_3 = "1"){
		rewrite /item/(.*) /$url_record_api$1.json?wskey=%{env:api_key} redirect;
	}
	if ($format_jsonld ~ "1"){
		set $rule_4 1;
	}
	if ($rule_4 = "1"){
		rewrite /item/(.*) /$url_record_api$1.jsonld?wskey=%{env:api_key} redirect;
	}
	if ($format_turtle ~ "1"){
		set $rule_5 1;
	}
	if ($rule_5 = "1"){
		rewrite /item/(.*) /$url_record_api$1.ttl?wskey=%{env:api_key} redirect;
	}
	if ($format_n3 ~ "1"){
		set $rule_6 1;
	}
	if ($rule_6 = "1"){
		rewrite /item/(.*) /$url_record_api$1.n3?wskey=%{env:api_key} redirect;
	}
	if ($format_ntriples ~ "1"){
		set $rule_7 1;
	}
	if ($rule_7 = "1"){
		rewrite /item/(.*) /$url_record_api$1.nt?wskey=%{env:api_key} redirect;
	}
	rewrite /item/(.*) /$url_record_portal$1 redirect;


    ########################################
    # Negotiation for OpenSKOS             #
    ########################################

    RewriteRule /concept/(loc|soundgenres)/(.*) $0.xml [L]


    # NGINX
    rewrite /concept/(loc|soundgenres)/(.*) /$0.xml last;

    ########################################
    # Annotations                          #
    ########################################

    RewriteRule ^/annotation/(.+?)/(.+?)/(.+?)$ \
                %{ENV:URL_PRESENTATION_API}/$1/$2/anno/$3 \
                [R=303,L]

    RewriteRule ^/annotation/(.*) \
                %{ENV:URL_ANNOTATION_API}/$1 \
                [R=303,L]


    # NGINX
    rewrite ^/annotation/(.+?)/(.+?)/(.+?)$ /$url_presentation_api$1/$2/anno/$3 redirect;
	rewrite ^/annotation/(.*) /$url_annotation_api$1 redirect;

    ########################################
    # Entities                             #
    ########################################

    # HTML
    RewriteCond %{ENV:format_html} 1
    RewriteRule /agent/base/(.*) \
                %{ENV:URL_ENTITY_PORTAL}/person/$1 \
                [R=303,L]

    RewriteCond %{ENV:format_html} 1
    RewriteRule /concept/base/(.*) \
                %{ENV:URL_ENTITY_PORTAL}/topic/$1 \
                [R=303,L]

    RewriteCond %{ENV:format_html} 1
    RewriteRule /timespan/(.*) \
                %{ENV:URL_ENTITY_PORTAL}/time/$1 \
                [R=303,L]

    RewriteRule /(organization)/(.*) \
                %{ENV:URL_ENTITY_API}/$1/base/$2?wskey=%{ENV:ENTITY_API_KEY} \
                [R=303,L]

    RewriteRule /(agent|place|concept|timespan)/(.*) \
                %{ENV:URL_ENTITY_API}/$1/$2?wskey=%{ENV:ENTITY_API_KEY} \
                [R=303,L]

    # NGINX
    if ($format_html ~ "1"){
		set $rule_0 1;
	}
	if ($rule_0 = "1"){
		rewrite /agent/base/(.*) /$url_entity_portal/person/$1 redirect;
	}
	if ($format_html ~ "1"){
		set $rule_1 1;
	}
	if ($rule_1 = "1"){
		rewrite /concept/base/(.*) /$url_entity_portal/topic/$1 redirect;
	}
	if ($format_html ~ "1"){
		set $rule_2 1;
	}
	if ($rule_2 = "1"){
		rewrite /timespan/(.*) /$url_entity_portal/time/$1 redirect;
	}
	rewrite /(organization)/(.*) /$url_entity_api$1/base/$2?wskey=%{env:entity_api_key} redirect;
	rewrite /(agent|place|concept|timespan)/(.*) /$url_entity_api$1/$2?wskey=%{env:entity_api_key} redirect;




    ########################################
    # Sets                                 #
    ########################################

    # HTML
    RewriteCond %{ENV:format_html} 1
    RewriteRule /set/(.*) \
                %{ENV:URL_SET_PORTAL}/$1 \
                [R=303,L]

    RewriteCond %{ENV:format_json} 1
    RewriteRule /set/(.*) \
                %{ENV:URL_SET_API}/$1.json?wskey=%{ENV:API_KEY} \
                [R=303,L]

    RewriteCond %{ENV:format_jsonld} 1
    RewriteRule /set/(.*) \
                %{ENV:URL_SET_API}/$1.jsonld?wskey=%{ENV:API_KEY} \
                [R=303,L]


    #NGINX
    if ($format_html ~ "1"){
		set $rule_0 1;
	}
	if ($rule_0 = "1"){
		rewrite /set/(.*) /$url_set_portal$1 redirect;
	}
	if ($format_json ~ "1"){
		set $rule_1 1;
	}
	if ($rule_1 = "1"){
		rewrite /set/(.*) /$url_set_api$1.json?wskey=%{env:api_key} redirect;
	}
	if ($format_jsonld ~ "1"){
		set $rule_2 1;
	}
	if ($rule_2 = "1"){
		rewrite /set/(.*) /$url_set_api$1.jsonld?wskey=%{env:api_key} redirect;
	}


    ########################################
    # Fulltext                             #
    ########################################

    RewriteRule ^/fulltext/(.+?)/(.+?)/(.+?)$ \
                %{ENV:URL_FULLTEXT_API}/$1/$2/$3 \
                [R=303,L]

    #NGINX
    rewrite ^/fulltext/(.+?)/(.+?)/(.+?)$ /$url_fulltext_api$1/$2/$3 redirect;


    ########################################
    # Negotiation for VoID and SPARQL      #
    ########################################

    RewriteRule /\.well-known/void \
                http://%{ENV:DATA_HOST} \
                [R=302,L]
    RewriteRule /sparql \
                http://sparql.europeana.eu \
                [R=301,L]

    # Turtle
    RewriteCond %{ENV:format_turtle} 1
    RewriteRule / \
                http://europeana.ontotext.com/void.ttl \
                [R=303,L]

    # Default; redirect to Pro unless it's a file that exists (e.g. robots.txt)
    RewriteCond %{DOCUMENT_ROOT}%{REQUEST_FILENAME} !-f
    RewriteRule / \
                https://pro.europeana.eu/page/linked-open-data \
                [R=303,L]

    #NGINX
    rewrite /\.well-known/void http://${data_$http_host redirect;
	rewrite /sparql http://sparql.europeana.eu permanent;
	if ($format_turtle ~ "1"){
		set $rule_2 1;
	}
	if ($rule_2 = "1"){
		rewrite / http://europeana.ontotext.com/void.ttl redirect;
	}
	if (!-f $document_root{request_filename}){
		set $rule_3 1;
	}
	if ($rule_3 = "1"){
		rewrite / https://pro.europeana.eu/page/linked-open-data redirect;
	}
</VirtualHost>